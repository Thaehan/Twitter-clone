// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Search /> Render Search 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <RNSScreenStack
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RNSScreen
      forwardedRef={[Function]}
      onAppear={[Function]}
      onDisappear={[Function]}
      onDismissed={[Function]}
      onTransitionProgress={[Function]}
      onWillDisappear={[Function]}
      replaceAnimation="push"
      stackPresentation="push"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <RNSScreenStackHeaderConfig
        backButtonInCustomView={false}
        backgroundColor="rgb(255, 255, 255)"
        color="rgb(0, 122, 255)"
        direction="ltr"
        disableBackButtonMenu={false}
        hidden={false}
        hideBackButton={false}
        largeTitleHideShadow={false}
        title="Profile"
        titleColor="rgb(28, 28, 30)"
        topInsetEnabled={false}
        translucent={false}
      >
        <RNSScreenStackHeaderSubview
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
          type="left"
        >
          <View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignContent": "center",
                  "alignSelf": "center",
                  "borderRadius": 50,
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "overflow": "hidden",
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <Text />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RNSScreenStackHeaderSubview>
      </RNSScreenStackHeaderConfig>
      <View
        style={
          Array [
            Object {
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgb(242, 242, 242)",
            },
            undefined,
          ]
        }
      >
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Array [
              Object {
                "backgroundColor": "white",
                "fontSize": 16,
              },
              Object {
                "alignItems": "center",
                "flex": 1,
                "width": 750,
              },
            ]
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
                "height": 55,
                "width": 750,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              onChangeText={[Function]}
              placeholder="Search User"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "#f6f6f6",
                  "borderColor": "#f8f8f8",
                  "borderRadius": 25,
                  "borderWidth": 1,
                  "fontSize": 16,
                  "height": 40,
                  "marginBottom": 10,
                  "marginLeft": 15,
                  "marginTop": 10,
                  "paddingLeft": 15,
                  "width": 330,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "width": "12%",
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignContent": "center",
                    "alignSelf": "center",
                    "borderRadius": 50,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Array [
                      Object {
                        "fontWeight": "500",
                        "padding": 0,
                      },
                      Object {
                        "color": undefined,
                      },
                    ]
                  }
                >
                  Delete
                </Text>
              </View>
            </View>
          </View>
          <RCTScrollView
            showsHorizontalScrollIndicator={false}
            showsVerticalScrollIndicator={false}
          >
            <View>
              <Text
                style={
                  Object {
                    "fontSize": 17,
                    "fontWeight": "bold",
                    "textAlign": "center",
                  }
                }
              >
                Can not find user with username: 
                
              </Text>
            </View>
          </RCTScrollView>
          <View
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 50,
                "bottom": 20,
                "position": "absolute",
                "right": 20,
              }
            }
          >
            <View
              accessible={true}
              focusable={false}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#1da1f2",
                  "borderRadius": 50,
                  "height": 60,
                  "justifyContent": "center",
                  "opacity": 1,
                  "width": 60,
                }
              }
            >
              <View
                style={
                  Object {
                    "overflow": "hidden",
                  }
                }
              >
                <View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "transparent",
                        "justifyContent": "center",
                      }
                    }
                  >
                    <Text />
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTSafeAreaView>
      </View>
    </RNSScreen>
  </RNSScreenStack>
</RNCSafeAreaProvider>
`;
